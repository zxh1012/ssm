<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zking.ssm.mapper.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.zking.ssm.model.Permission" >
    <constructor >
      <idArg column="permission_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="permission_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="level" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="parent_permission_id" jdbcType="BIGINT" javaType="java.lang.Long" />
      <arg column="available" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="permission" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    permission_id, permission_name, level, parent_permission_id, available, permission
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_sys_permission
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_sys_permission
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.zking.ssm.model.Permission" >
    insert into t_sys_permission (permission_id, permission_name, level, 
      parent_permission_id, available, permission
      )
    values (#{permissionId,jdbcType=BIGINT}, #{permissionName,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{parentPermissionId,jdbcType=BIGINT}, #{available,jdbcType=INTEGER}, #{permission,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zking.ssm.model.Permission" >
    insert into t_sys_permission
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        permission_id,
      </if>
      <if test="permissionName != null" >
        permission_name,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="parentPermissionId != null" >
        parent_permission_id,
      </if>
      <if test="available != null" >
        available,
      </if>
      <if test="permission != null" >
        permission,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="permissionId != null" >
        #{permissionId,jdbcType=BIGINT},
      </if>
      <if test="permissionName != null" >
        #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="parentPermissionId != null" >
        #{parentPermissionId,jdbcType=BIGINT},
      </if>
      <if test="available != null" >
        #{available,jdbcType=INTEGER},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zking.ssm.model.Permission" >
    update t_sys_permission
    <set >
      <if test="permissionName != null" >
        permission_name = #{permissionName,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="parentPermissionId != null" >
        parent_permission_id = #{parentPermissionId,jdbcType=BIGINT},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=INTEGER},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
    </set>
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zking.ssm.model.Permission" >
    update t_sys_permission
    set permission_name = #{permissionName,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      parent_permission_id = #{parentPermissionId,jdbcType=BIGINT},
      available = #{available,jdbcType=INTEGER},
      permission = #{permission,jdbcType=VARCHAR}
    where permission_id = #{permissionId,jdbcType=BIGINT}
  </update>
</mapper>